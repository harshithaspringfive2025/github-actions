# This workflow will build a MuleSoft project and deploy to CloudHub
name: Build and Deploy to IMV Cloudhub
on:
  push :
    branches: 'main'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: mvn -B package --file pom.xml 
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
          name: artifacts
          path: target/*.jar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v4
      with:
        name: artifacts
    - name: Deploy to Sandbox
      env:
        USERNAME: ${{ secrets.ANYPOINT_USERNAME }}
        PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn -X deploy -DmuleDeploy \
         -Dmule.artifact="$artifactName" \
         -Danypoint.username="$USERNAME" \
         -Danypoint.password="$PASSWORD" \
 
